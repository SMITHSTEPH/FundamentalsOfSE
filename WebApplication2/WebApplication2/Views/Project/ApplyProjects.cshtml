@model dynamic
<!DOCTYPE html>
<html>
<head>
    <title>@{ViewBag.Title = "ApplyProjects";}</title>
    @{Layout = "~/Views/Shared/_Layout.cshtml";}
    <link rel="stylesheet" type="text/css" href="~/Content/EditAndAddStyle.css">
    <script src="~/Scripts/ProjectManager.js"></script> 
 
</head>
<body>
    <div align="center">
        <h3>Add Project Members</h3>
        <div class="info">
            @if (Model.MemberTableAdd.Count == 0)
            {
                @Html.Label("no available members to add")<br />
            }
            <table>
                @foreach (memberTableV2 member in Model.MemberTableAdd)
                {
                    using (Html.BeginForm("AddtoTableLeader", "Project", new { id = Model.ProjectTable.ProjectId, role = "Member", Aid = member.Id, Uid = Model.leader.Id }))
                    {
                        <tr>
                            <td> @Html.Label("Member: " + @member.UserName)</td>
                            <td><input type="submit" value="Add" class="btn-primary button" , onclick="return confirm('Are you sure you want to add this person to the project?')" /></td>
                        </tr>
                    }

                }
            </table>
        </div>
            <h3>Remove Project Members</h3>
        <div class="info">
            @if (Model.MemberTableRemove.Count == 0)
            {
                @Html.Label("no available members to remove");<br />
            }
            <table>
                @foreach (memberTableV2 member in Model.MemberTableRemove)
                {
                    foreach (JunctionTableProjectAndAccountV2 junc in Model.JunctionTableEdit)
                    {
                        if (junc.AID == member.Id)
                        {
                            using (Html.BeginForm("RemoveTable", "Project", new { id = Model.ProjectTable.ProjectId, role = "Member", Aid = member.Id, Uid = Model.leader.Id }))
                            {
                                <tr>
                                    <td> @Html.Label("Member: " + @member.UserName + " with a responsibitly: " + @junc.Responsibilities)</td>
                                    <td><input type="submit" value="Remove" class="btn-primary button" , onclick="return confirm('Are you sure you want to remove this person to the project')" /></td>
                                </tr>
                            }
                        }
                    }
                }
            </table>
         </div>
        <div class="info">
            <h3>Edit Project Members</h3>
            @if (Model.MemberTableRemove.Count == 0)
            {
                @Html.Label("no available members to edit")<br />
            }
            <table>
                @foreach (memberTableV2 member in Model.MemberTableRemove)
                {
                    using (Html.BeginForm("EditTable", "Project", FormMethod.Post))
                    {
                        List<SelectListItem> dropDown = new List<SelectListItem>();
                        dropDown.Add(new SelectListItem { Value = "Coder," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Coder" });
                        dropDown.Add(new SelectListItem { Value = "Tester," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Tester" });
                        dropDown.Add(new SelectListItem { Value = "Product Owner," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Product Owner" });
                        dropDown.Add(new SelectListItem { Value = "Scrum Designer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Scrum Designer" });
                        dropDown.Add(new SelectListItem { Value = "Developer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Developer" });
                        dropDown.Add(new SelectListItem { Value = "Designer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "Designer" });
                        dropDown.Add(new SelectListItem { Value = "2ndCommand," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id) + "," + Convert.ToString(Model.leader.Id), Text = "2nd in Command" });
                        <tr>
                            <td>@Html.Label("Member: " + @member.UserName + " with a responsibitly: ");</td>
                            <td>@Html.DropDownList("DropChoice", new SelectList(dropDown, "Value", "Text"))</td>
                            <td><input type="submit" value="Edit" class="button btn-primary" onclick="return confirm('Are you sure you want edit this member');"></td>
                        </tr>
                    }
                }
            </table>
        </div>
    </div>
   </body>
</html>

