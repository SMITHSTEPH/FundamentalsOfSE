@model dynamic
<!DOCTYPE html>
<html>
<head>
    <title>@{ViewBag.Title = "ApplyProjects";}</title>
    @{Layout = "~/Views/Shared/_Layout.cshtml";}
</head>
<body>
    
    <h2>Add People to Projects</h2>

    <div>
        @if (Model.MemberTableAdd.Count != 0)
        {
            @Html.Label("You can add these people to project: ")
            @Model.ProjectTable.ProjectId
            <br />
            <br />
        }

        @foreach (memberTableV2 member in Model.MemberTableAdd)
        {
                @Html.Label("Member:  ")
                @member.UserName
                @Html.ActionLink(" Click to Add", "AddtoTable", new { id = Model.ProjectTable.ProjectId, role = "Member", Aid = member.Id})
                <br />

        }

        @if (Model.MemberTableRemove.Count != 0)
        {
            <br />
            <br />
            @Html.Label("You can remove these people in the project: ")
            @Model.ProjectTable.ProjectId
            <br />
            <br />
        }
        

        @foreach (memberTableV2 member in Model.MemberTableRemove)
        {
            foreach (JunctionTableProjectAndAccountV2 junc in Model.JunctionTableEdit)
            {
                if (junc.AID == member.Id)
                {
                    @Html.Label("Member:  ")
                    @member.UserName
                    @Html.Label(" with a responsibitly: ")
                    @junc.Responsibilities
                    @Html.ActionLink(" Click to Remove", "RemoveTable", new { id = Model.ProjectTable.ProjectId, role = "Member", Aid = member.Id })
                    <br />
                }
            }
        }
        

        @if (Model.MemberTableRemove.Count != 0)
        {   
            <br />
            <br />
            @Html.Label("You can edit these people in the project: ")
            @Model.ProjectTable.ProjectId
            <br />
            <br />
        }
       

        @foreach (memberTableV2 member in Model.MemberTableRemove)
        {
            using (Html.BeginForm("EditTable", "Project", FormMethod.Post))
            {
                List<SelectListItem> dropDown = new List<SelectListItem>();
                dropDown.Add(new SelectListItem { Value = "Coder," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Coder" });
                dropDown.Add(new SelectListItem { Value = "Tester," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Tester" });
                dropDown.Add(new SelectListItem { Value = "Product Owner," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Product Owner" });
                dropDown.Add(new SelectListItem { Value = "Scrum Designer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Scrum Designer" });
                dropDown.Add(new SelectListItem { Value = "Developer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Developer" });
                dropDown.Add(new SelectListItem { Value = "Designer," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "Designer" });
                dropDown.Add(new SelectListItem { Value = "2ndCommand," + Convert.ToString(Model.ProjectTable.ProjectId) + ",Member," + Convert.ToString(member.Id), Text = "2nd in Command" });
                            @Html.Label("Member:  ")
                            @member.UserName
                            @Html.Label(" with a responsibitly: ")
                            @Html.DropDownList("DropChoice", new SelectList(dropDown, "Value", "Text"))
                <input type="submit" value="Edit Member">
            }


        }
           


    </div>
</body>
</html>

